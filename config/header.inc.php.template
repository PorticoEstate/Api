<?php
	/**
	* phpGroupWare
	*
	* phpgroupware header
	* @author Dan Kuykendall <seek3r@phpgroupware.org>
	* @author Joseph Engo <jengo@phpgroupware.org>
 	* @author Dave Hall <skwashd@phpgroupware.org>
 	* @author Sigurd Nes <sigurdne@online.no>
 	* @copyright Copyright (C) 2000-2024 Free Software Foundation, Inc. http://www.fsf.org/
  	* @license http://www.gnu.org/licenses/gpl.html GNU General Public License
  	* @package phpgroupware
 	* @version $Id: header.inc.php.template 18392 2008-01-26 12:45:06Z skwashd $
 	*/

 	/*
 	   This program is free software: you can redistribute it and/or modify
 	   it under the terms of the GNU General Public License as published by
 	   the Free Software Foundation, either version 2 of the License, or
 	   (at your option) any later version.

 	   This program is distributed in the hope that it will be useful,
 	   but WITHOUT ANY WARRANTY; without even the implied warranty of
 	   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 	   GNU General Public License for more details.

 	   You should have received a copy of the GNU General Public License
 	   along with this program.  If not, see <http://www.gnu.org/licenses/>.
  	*/


	// **************************************************************************
	// !!!!!!! EDIT THESE LINES !!!!!!!!
	// This setting allows you to easily move the include directory and the
	// base of the phpGroupWare install. Simple edit the following 2 lines with
	// the absolute path to fit your site, and you should be up and running.
	// **************************************************************************

	if (!defined('PHPGW_SERVER_ROOT'))
	{
		/**
		* Server root directory
		*/
		define('PHPGW_SERVER_ROOT', '{SERVER_ROOT}');

		/**
		* Include root directory - legacy support
		*/
		define('PHPGW_INCLUDE_ROOT', PHPGW_SERVER_ROOT);
		define('PHPGW_MODULES_PATH', '/src/modules');//Internal structure of the modules directory

	}

	//We only let preset flags remain everything else is killed
	$flags = array();
	if ( isset($phpgw_info['flags']) )
	{
		$flags = $phpgw_info['flags'];
	}
	unset($phpgw_info);

	/**
	* array $phpgw_info the phpgroupware information array
	*/
	$phpgw_info = array('flags' => $flags);
	unset($flags);

	/**
	* string $phpgw_info['server']['header_admin_password'] Setup administrator password
	*/
	$phpgw_info['server']['header_admin_password'] = '{HEADER_ADMIN_PASSWORD}';

	/**
	* string $phpgw_info['server']['default_lang'] The default language
	*/
	$phpgw_info['server']['default_lang'] = '{DEFAULT_LANG}';

	/**
	* string $phpgw_info['server']['system_name'] The system name
	*/
	$phpgw_info['server']['system_name'] = '{SYSTEM_NAME}';

	// phpGroupWare domain-specific db settings
	// Note that with mcrypt enabled- the database settings are encrypted (the web-interface has to be used to produce the settings)
	
	$phpgw_domain = [];
	
	{domains}


	/**
	* boolean $phpgw_info['server']['show_domain_selectbox']
	* If you want to have your domains in a select box, change to True
	* If not, users will have to login as user@domain
	* Note: This is only for virtual domain support, default domain users can login only using
	* there login id.
	*/
	$phpgw_info['server']['show_domain_selectbox'] = {DOMAIN_SELECTBOX};

	/**
	* $phpgw_info['server']['domain_from_host']
	* As an alternative to the domain select box, set this option to True
	* to use the domain name from the browser provided hostname ($_SERVER['HTTP_HOST'])
	*/
	$phpgw_info['server']['domain_from_host'] = {DOMAIN_FROM_HOST};

	/**
	* boolean $phpgw_info['server']['db_persistent']
	* Use persistent database connection
	*/
	$phpgw_info['server']['db_persistent'] = {DB_PERSISTENT};

	/**
 	* string $phpgw_info['server']['sessions_type']
 	* phpGroupWare offers 2 session management systems - php and db
 	* Unless you really know what you are doing use php here as it works better 99.5% of the time
  	*/
 	$phpgw_info['server']['sessions_type'] = '{SESSIONS_TYPE}';

	/**
	* string $phpgw_info['login_template_set']
	* Select which login template set you want, most people will use 'simple'
	*/
	$phpgw_info['login_template_set'] = 'simple';

	/**
	* string $phpgw_info['login_left_message']
	* An optional text to be displayed to the left on the login form.
	* FORMATTING HAS TO BE EDITED MANUALLY (links and linebreak)
	*/ 
	$login_left_message = <<<HTML
{LOGIN_LEFT_MESSAGE}
HTML;

	$phpgw_info['login_left_message'] = nl2br(str_replace(array('[',']'), array('<','>'), $login_left_message));

	/**
	* string $phpgw_info['login_right_message']
	* An optional text to be displayed to the right on the login form.
	* FORMATTING HAS TO BE EDITED MANUALLY (links and linebreak)
	*/
	$login_right_message = <<<HTML
{LOGIN_RIGHT_MESSAGE}
HTML;

	$phpgw_info['login_right_message'] = nl2br(str_replace(array('[',']'), array('<','>'), $login_right_message));

	/**
	* string $phpgw_info['new_user_url']
	 * An otpional url to new user registration
	 */
	$phpgw_info['server']['new_user_url'] = '{NEW_USER_URL}';

	/**
	* string $phpgw_info['lost_password_url']
	* An otpional url to remedy lost passwords
	 */
	$phpgw_info['server']['lost_password_url'] = '{LOST_PASSWORD_URL}';

	/**
 	* string $phpgw_info['server']['enable_crypto']
 	* phpGroupWare offers 2 crypto systems - mcrypt and libsodium
 	* Note: mcrypt is deprecated from php 7.1+
  	*/
 	$phpgw_info['server']['enable_crypto'] = '{ENABLE_CRYPTO}';

	/**
	* boolean $phpgw_info['server']['mcrypt_enabled']
	* This is used to control mcrypt's use
	* Note: deprecated from php 7.1+
	*/
	$phpgw_info['server']['mcrypt_enabled'] = false;

	/**
	* string $phpgw_info['server']['mcrypt_iv']
	* This is a random string used as the initialization vector for mcrypt
	* feel free to change it when setting up phpgroupware on a clean database,
	* but you must not change it after that point!
	* It should be around 30 bytes in length.
	*/
	$phpgw_info['server']['mcrypt_iv'] = '{MCRYPT_IV}';

	/**
	* string $phpgw_info['server']['setup_mcrypt_key']
	* This is a random string used as the encryption key for mcrypt or libsodium
	* feel free to change it when setting up phpgroupware on a clean database,
	* but you must not change it after that point!
	*/
	$phpgw_info['server']['setup_mcrypt_key'] = '{SETUP_MCRYPT_KEY}';


	//check if DEBUG_APP is defined
	if (!defined('DEBUG_APP'))
	{
		// debugging settings
		define('DEBUG_APP',  False);
		define('DEBUG_API',  False);
		define('DEBUG_DATATYPES',  True);
		define('DEBUG_LEVEL',  3);
		define('DEBUG_OUTPUT', 2); // 1 = screen,  2 = DB (not supported with PHP3). For both use 3.
		define('DEBUG_TIMER', False);
	}


	if (!function_exists('perfgetmicrotime'))
	{
		/**
		* Perf get microtime
		*
		* @return float Microseconds
		*/
		function perfgetmicrotime()
		{
			list($usec, $sec) = explode(' ',microtime());
			return ((float)$usec + (float)$sec);
		}
	}


	if (DEBUG_TIMER)
	{
		define('DEBUG_TIMER_START', perfgetmicrotime());
	}

	// **************************************************************************
	// Do not edit these lines
	// **************************************************************************

	if (!defined('PHPGW_API_INC'))
	{
		/**
		* phpgroupware API include root
		*/
		define('PHPGW_API_INC',PHPGW_SERVER_ROOT.'/phpgwapi/inc');
	}
	
	/**
	* string $phpgw_info['server']['versions']['header']
	* Version of this header file
	*/
	$phpgw_info['server']['versions']['header'] = '1.32';

	$external_db = array();
	return array(
		'phpgw_info' => $phpgw_info,
		'phpgw_domain' => $phpgw_domain,
		'external_db' => !empty($external_db) ? $external_db : array()
	);	

	// Leave off the final php closing tag, some editors will add
	// a \n or space after which will mess up cookies later on

<!-- BEGIN domain -->

	$phpgw_domain['{DB_DOMAIN}'] = array
	(
		'db_host' => '{DB_HOST}',
		'db_port' => '{DB_PORT}',
		'db_name' => '{DB_NAME}',
		'db_user' => '{DB_USER}',
		'db_pass' => '{DB_PASS}',
		// Look at the README file
		'db_type' => '{DB_TYPE}',
		'config_passwd' => '{CONFIG_PASS}'
	);

<!-- END domain -->
